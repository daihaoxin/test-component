module.exports = {
  hooks: {},
  plugins: {
    "@release-it/conventional-changelog": {
      infile: "CHANGELOG.md",
      header: "# Changelog",
      ignoreRecommendedBump: true, // 笔者希望自己选择 bump 的策略，而不是按照推荐的策略，因此将此选项打开
      strictSemVer: true, // 笔者希望发布的版本号必须是 strict-semver 的版本号，因此将此选项打开

      preset: {
        name: "conventionalcommits",
        types: [
          { type: "feat", section: "✨新功能" },
          { type: "fix", section: "🐛问题修复" },
          { type: "chore", hidden: true },
          { type: "docs", section: "📚文档" },
          { type: "style", hidden: true },
          { type: "refactor", hidden: true },
          { type: "perf", hidden: true },
          { type: "test", hidden: true },
        ],
      },
    },
  },
  git: {
    commitMessage: "release: v${version}",
    changelog: 'git log --pretty=format:"* %s (%h)" ${from}...${to}',
    requireCleanWorkingDir: true,
    requireBranch: false,
    requireUpstream: true,
    requireCommits: false,
    addUntrackedFiles: false,
    commit: true,
    commitArgs: [],
    tag: true,
    tagName: null,
    tagMatch: null,
    tagAnnotation: "Release ${version}",
    tagArgs: [],
    push: true,
    pushArgs: ["--follow-tags"],
    pushRepo: "",
  },
  npm: {
    publish: true,
    publishPath: ".",
    publishArgs: [],
    tag: null,
    otp: null,
    ignoreVersion: false,
    allowSameVersion: false,
    skipChecks: false,
    timeout: 10,
  },
  github: {
    release: false,
    releaseName: "Release ${version}",
    releaseNotes: null,
    autoGenerate: false,
    preRelease: false,
    draft: false,
    tokenRef: "GITHUB_TOKEN",
    assets: null,
    host: null,
    timeout: 0,
    proxy: null,
    skipChecks: false,
    web: false,
  },
  gitlab: {
    release: false,
    releaseName: "Release ${version}",
    releaseNotes: null,
    milestones: [],
    tokenRef: "GITLAB_TOKEN",
    tokenHeader: "Private-Token",
    certificateAuthorityFile: null,
    assets: null,
    origin: null,
    skipChecks: false,
  },
};
